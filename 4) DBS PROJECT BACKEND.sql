--LOGIN TABLE
CREATE TABLE LOGIN (
    USER_ID      INT PRIMARY KEY,
    USERNAME     VARCHAR(50) UNIQUE NOT NULL,
    CODE         VARCHAR(100) NOT NULL,
    ROLE         VARCHAR(10) CHECK (ROLE IN ('user', 'manager')) NOT NULL
);

-- Inserting a valid row
INSERT INTO LOGIN (USER_ID, USERNAME, CODE, ROLE)
VALUES 
(1, 'SAAD', 'QWERTY1234', 'manager');


-- PERSON TABLE
CREATE TABLE PERSON (
    PERSON_ID		INT PRIMARY KEY,
    PERSON_NAME		VARCHAR(100) NOT NULL,
    EMAIL			VARCHAR(100),
	GENDER			VARCHAR(20)
);

INSERT INTO PERSON (PERSON_ID, PERSON_NAME, EMAIL, GENDER) 
VALUES
(1 , 'ALI HAIDER' ,	'ali_haider12@gmail.com'  ,	'MALE'),
(2 , 'AKBAR ALI'  ,	'akbarali2091@gmail.com'  ,	'MALE'),
(3 , 'ALI HASSAN' ,	'alihassan145@gamil.com'  ,	'MALE'),
(4 , 'ABUZAR ALI' , 'abuzar_ali14@gmail.com'  ,	'MALE'),
(5 , 'SARA ASLAM' , 'sara_aslam72@gmail.com'  ,	'FEMALE'); 


--PERSON_CONTACT TABLE
CREATE TABLE PERSON_CONTACT (
	PERSON_ID		INT,
	CONTACT			VARCHAR(100),
	PRIMARY KEY		(PERSON_ID, CONTACT),
		
		FOREIGN KEY (PERSON_ID) REFERENCES PERSON (PERSON_ID)
);

INSERT INTO PERSON_CONTACT (PERSON_ID, CONTACT)
VALUES
(1	,	'0310-2090876'),
(2	,	'0334-5365991'),
(2	,	'0333-9078256'),
(3	,	'0332-9087634'),
(4	,	'0312-8756900'),
(5	,	'0332-2378543'),
(5	,	'0345-5923851');



--ORGANIZER TABLE
CREATE TABLE ORGANIZER (
    ORG_ID			INT PRIMARY KEY,
    ORG_NAME		VARCHAR(100),
    ORG_CONTACT		VARCHAR(50)
);

INSERT INTO ORGANIZER (ORG_ID, ORG_NAME, ORG_CONTACT) 
VALUES
(1  ,	'ALPHA EVNETS'  ,	'1234567890'),
(2  ,	'EVENT MASTER'	,	'9876543210'),
(3  ,	'CITY EVENTS'   ,	'5511223344'),
(4  ,	'FEST PRO'		,	'0044556677'),
(5  ,	'EXPERT TEAM'   ,	'4445559991'),
(6  ,	'SIGMA COP'	    ,	'5959595421'),
(7  ,	'PLANNER TNT'   ,	'0001112222'),
(8  ,	'PRO_TEAM'      ,	'3334445555'),
(9  ,	'ELITE ORG'		,	'2253327789'),
(10 ,	'SPECX PRO'		,	'0989592349');



--SPONSOR TABLE
CREATE TABLE SPONSOR (
    SPON_ID			INT PRIMARY KEY,
    SPON_NAME		VARCHAR(100),
    SPON_CONTACT	VARCHAR(50)
);

INSERT INTO SPONSOR (SPON_ID, SPON_NAME, SPON_CONTACT) 
VALUES
(1	  ,		'BRAVO LTD'			,	'0956569992'),
(2	  ,		'ECHO PARTNERS'		,	'4441122880'),
(3	  ,		'HOTEL INCOP'		,	'9875579000'),
(4	  ,		'BEST TRADERS'		,	'1569952999'),
(5	  ,		'FOODIES LTD'		,	'4242383890'),
(6	  ,		'SPARKE VAGUE'		,	'7070001188'),
(7	  ,		'MICROSOFT'			,	'0099221144'),
(8	  ,		'TRAINEES ORG'		,	'0990101112'),
(9    ,		'INSIGHTINGS'		,	'1019145679'),
(10   ,		'KICKERS LTD'		,	'2341680900');




-- EVENT TABLE
CREATE TABLE EVENT (
    EVENT_ID		INT PRIMARY KEY,
    TITLE			VARCHAR(100),
    EVENT_DATE		DATE,
	EVENT_TIME		TIME,
    VENUE			VARCHAR(100),
	ORG_ID			INT,
		FOREIGN KEY (ORG_ID) REFERENCES ORGANIZER (ORG_ID)
);

INSERT INTO EVENT (EVENT_ID, TITLE, EVENT_DATE, EVENT_TIME, VENUE, ORG_ID) 
VALUES
(1  , 'MUSIC FESTIVAL' , '2025-08-01' , '18:00:00' , 'CENTRAL GROUND'   ,  1),
(2  , 'BOOK FAIR'	   , '2025-08-10' , '12:00:00' , 'CITY LIBRARY'     ,  7),
(3  , 'PET SHOW'       , '2025-08-15' , '22:00:00' , 'PET GARDENS'	    ,  10),
(4  , 'CAR SHOW'       , '2025-09-25' , '23:00:00' , 'FIVE HOSTEL'      ,  9),
(5  , 'FOOD FEST'      , '2025-09-02' , '15:00:00' , 'FOOD STREET'	    ,  4),
(6  , 'TECH EXPO'      , '2025-09-10' , '15:00:00' , 'IT AUDITORIUM'    ,  2),
(7  , 'MOVIE NIGHT'    , '2025-10-15' , '18:00:00' , 'OPEN THEATRE'	    ,  1),
(8  , 'CONCERT'		   , '2025-10-20' , '10:00:00' , 'CENTRAL GROUND'   ,  5),
(9  , 'CULTURAL DAY'   , '2025-11-25' , '14:00:00' , 'MAIN GROUND'		,  3),
(10 , 'AI SEMINAR'     , '2025-12-30' , '11:00:00' , 'CONFERENCE HALL'	,  6),
(11 , 'FASHION SHOW'   , '2026-01-01' , '09:00:00' , 'CITY HALL'		,  8),
(12 , 'CIRCUS SHOW'    , '2026-02-15' , '22:00:00' , 'GRAND ARENA'	    ,  4),
(13 , 'ART FESTIVAL'   , '2026-02-19' , '12:00:00' , 'ART COMPLEX'		,  9),
(14 , 'SCIENCE FAIR'   , '2026-03-20' , '10:00:00' , 'EXHIBITION CENTER',  9),
(15 , 'DRAMA NIGHT'	   , '2026-04-02' , '20:00:00' , 'OPEN THEATER'		,  10);




CREATE TABLE TICKET (
    TICKET_ID		INT PRIMARY KEY,
    PRICE			DECIMAL(10,2),
    SEAT_NO			VARCHAR(20),
    STATUS			VARCHAR(20),
    TICKET_TYPE		VARCHAR(50),
    EVENT_ID		INT,
    PERSON_ID		INT,

		FOREIGN KEY (EVENT_ID) REFERENCES EVENT(EVENT_ID),
		FOREIGN KEY (PERSON_ID) REFERENCES PERSON(PERSON_ID)
);

INSERT INTO TICKET (TICKET_ID, PRICE, SEAT_NO, STATUS, TICKET_TYPE, EVENT_ID, PERSON_ID) 
VALUES
(1	, 5000.00	, 'A1'	,	'BOOKED'	,	'VIP'		,	1	,	1),
(2	, 500.00	, 'D2'	,	'BOOKED'	,	'REGULAR'	,	1	,	2),
(3	, 1300.00	, 'B3'	,	'AVAILABLE'	,	'STUDENT'	,	2	,	5),
(4	, 1500.00	, 'D4'	,	'BOOKED'	,	'VIP'		,	2	,	3),
(5	, 500.00	, 'E5'	,	'CANCELLED'	,	'REGULAR'	,	5	,	2),
(6	, 700.00	, 'F6'	,	'BOOKED'	,	'REGULAR'	,	6	,	4),
(7	, 1600.00	, 'G7'	,	'BOOKED'	,	'STUDENT'	,	7	,	2),
(8	, 1500.00	, 'H8'	,	'BOOKED'	,	'VIP'		,	8	,	1),
(9	, 8000.00	, 'A1'	,	'BOOKED'	,	'VIP'		,	10	,	2),
(10 , 3000.00	, 'E4'	,	'BOOKED'	,	'REGULAR'	,	10	,	3);



CREATE TABLE PAYMENT (
    PAYMENT_ID		INT PRIMARY KEY,
    PAY_METHOD		VARCHAR(50),
    AMOUNT			DECIMAL(10,2),
    PAY_DAY			DATE DEFAULT GETDATE(),
    TICKET_ID		INT,

		FOREIGN KEY (TICKET_ID) REFERENCES TICKET(TICKET_ID)
);

INSERT INTO PAYMENT (PAYMENT_ID, PAY_METHOD, AMOUNT, PAY_DAY, TICKET_ID) 
VALUES
(1	,	'CREDIT CARD'	,	5000.00		,	'2025-07-25'	,	1),
(2	,	'CASH'			,	500.00		,	'2025-07-30'	,	2),
(3	,	'ONLINE'		,	1300.00		,	'2025-08-05'	,	3),
(4	,	'ONLINE'		,	1500.00		,	'2025-08-02'	,	4),
(5	,	'CASH'			,	500.00		,	'2025-08-30'	,	5),
(6	,	'ONLINE'		,	700.00		,	'2025-09-05'	,	6),
(7	,	'CREDIT CARD'	,	1600.00		,	'2025-09-10'	,	7),
(8	,	'CASH'			,	1500.00		,	'2025-09-15'	,	8),
(9	,	'CREDIT CARD'	,	8000.00		,	'2025-11-30'	,	9),
(10	,	'CASH'			,	3000.00		,	'2025-12-12'	,	10);



CREATE TABLE FEEDBACK (
    FEEDBACK_ID			INT PRIMARY KEY,
    COMMENT				VARCHAR(100)	CHECK (LEN(COMMENT) < 100),
    RATING				VARCHAR(50),
    PERSON_ID			INT,
    EVENT_ID			INT,
	UNIQUE				(PERSON_ID, EVENT_ID),

		FOREIGN KEY (PERSON_ID) REFERENCES PERSON(PERSON_ID),
		FOREIGN KEY (EVENT_ID) REFERENCES EVENT(EVENT_ID)
);

INSERT INTO FEEDBACK (FEEDBACK_ID, COMMENT, RATING, PERSON_ID, EVENT_ID) 
VALUES
(1	,	'AMAZING EVENT!'			,	 'AMAZING'			,	1	,	1),
(2	,	'WELL ORGANIZED.'			,	 'GOOD'				,	5	,	2),
(3	,	'LOVED THE PERFORMANCES.'	,	 'EXCELLENT'		,	1	,	8),
(4	,	'IMPROVEMENT REQUIRED.'		,	 'SATISFACTORY'		,	2	,	7),
(5	,	'GREAT FOOD STALLS.'		,	 'GOOD'				,	2	,	5);



CREATE TABLE REGISTRATION (
    REG_ID			INT PRIMARY KEY,
    PERSON_ID		INT,
    EVENT_ID		INT,
    REG_DATE		DATE,

		FOREIGN KEY (PERSON_ID) REFERENCES PERSON(PERSON_ID),
		FOREIGN KEY (EVENT_ID) REFERENCES EVENT(EVENT_ID)
);

INSERT INTO REGISTRATION (REG_ID, PERSON_ID, EVENT_ID, REG_DATE) 
VALUES
(1	,	1	,	1	,	'2025-08-01'),
(2	,	2	,	1	,	'2025-08-01'),
(3	,	5	,	2	,	'2025-08-10'),
(4	,	3	,	2	,	'2025-08-10'),
(5	,	2	,	5	,	'2025-09-02'),
(6	,	4	,	6	,	'2025-09-10'),
(7	,	2	,	7	,	'2025-10-15'),
(8	,	1	,	8	,	'2025-10-20'),
(9	,	2	,	10	,	'2025-12-30'),
(10 ,	3	,	10	,	'2025-12-30');



CREATE TABLE SPONSORSHIP (
    SPON_ID			INT,
    EVENT_ID		INT,
    S_AMOUNT		DECIMAL(12,2),
    PRIMARY KEY		(SPON_ID, EVENT_ID),

		FOREIGN KEY (SPON_ID) REFERENCES SPONSOR(SPON_ID),
		FOREIGN KEY (EVENT_ID) REFERENCES EVENT(EVENT_ID)
);

INSERT INTO SPONSORSHIP (SPON_ID, EVENT_ID, S_AMOUNT) 
VALUES
(1	,	1	,	90000.00),
(2	,	2	,	20000.00),
(3	,	3	,	72000.00),
(4	,	4	,	55000.00),
(5	,	5	,	95000.00),
(6	,	6	,	90000.00),
(7	,	7	,	61000.00),
(8	,	8	,	97000.00),
(9	,	9	,	50000.00),
(10	,	10	,	80000.00),
(11	,	11	,	90000.00),
(12	,	12	,	100000.0),
(13	,	13	,	70000.00),
(14	,	14	,	80000.00),
(15	,	15	,	60000.00);


--QUERIES

SELECT * FROM PERSON;

SELECT * FROM PERSON_CONTACT;

SELECT * FROM ORGANIZER;

SELECT * FROM SPONSOR;

SELECT * FROM EVENT;

SELECT * FROM TICKET;

SELECT * FROM PAYMENT;

SELECT * FROM FEEDBACK;

SELECT * FROM REGISTRATION;

SELECT * FROM SPONSORSHIP;


-- List all persons with their contacts
SELECT P.PERSON_NAME, PC.CONTACT
FROM PERSON P
JOIN PERSON_CONTACT PC 
	ON	P.PERSON_ID = PC.PERSON_ID;


-- Show all registrations with event and person names
SELECT R.REG_ID, P.PERSON_NAME, E.TITLE, R.REG_DATE
FROM REGISTRATION R
JOIN PERSON P 
	ON	R.PERSON_ID = P.PERSON_ID
JOIN EVENT E
	ON	R.EVENT_ID = E.EVENT_ID;

-- Find events on a specific date
SELECT * FROM EVENT WHERE EVENT_DATE = '2025-08-01';


-- Total sponsorship per event
SELECT EVENT_ID, SUM(S_AMOUNT) AS TOTAL_SPONSORSHIP
FROM SPONSORSHIP
GROUP BY EVENT_ID;


-- Average rating per event
SELECT EVENT_ID, AVG(RATING) AS AVG_RATING
FROM FEEDBACK
GROUP BY EVENT_ID;


-- Register a new person for an event
INSERT INTO REGISTRATION (REG_ID, PERSON_ID, EVENT_ID, REG_DATE)
VALUES (11, 5, 3, '2025-11-01');

-- Book a ticket
INSERT INTO TICKET (TICKET_ID, PRICE, SEAT_NO, STATUS, TICKET_TYPE, EVENT_ID, PERSON_ID)
VALUES (21, 2000, 'A23', 'Confirmed', 'VIP', 3, 5);

-- Record a payment
INSERT INTO PAYMENT (PAYMENT_ID, PAY_METHOD, AMOUNT, PAY_DAY, TICKET_ID)
VALUES (15, 'Card', 2000, '2025-11-01', 21);

-- Submit feedback
INSERT INTO FEEDBACK (FEEDBACK_ID, COMMENT, RATING, PERSON_ID, EVENT_ID)
VALUES (10, 'Great event!', 5, 5, 3);


-- Update ticket status to Cancelled
UPDATE TICKET
SET STATUS = 'Cancelled'
WHERE TICKET_ID = 5;

-- Update person contact
UPDATE PERSON_CONTACT
SET CONTACT = '0300-1234567'
WHERE PERSON_ID = 3 AND CONTACT = '0332-9087634';


-- Delete a registration
DELETE FROM REGISTRATION
WHERE REG_ID = 11;

-- Delete feedback with low rating
DELETE FROM FEEDBACK
WHERE RATING < 2;


-- Ticket details with person and event names
SELECT T.TICKET_ID, T.SEAT_NO, T.STATUS, P.PERSON_NAME, E.TITLE
FROM TICKET T
JOIN PERSON P ON T.PERSON_ID = P.PERSON_ID
JOIN EVENT E ON T.EVENT_ID = E.EVENT_ID;

-- People who gave feedback on each event
SELECT P.PERSON_NAME, E.TITLE, F.RATING, F.COMMENT
FROM FEEDBACK F
JOIN PERSON P ON F.PERSON_ID = P.PERSON_ID
JOIN EVENT E ON F.EVENT_ID = E.EVENT_ID;


-- Check if person already registered for an event
SELECT * FROM REGISTRATION
WHERE PERSON_ID = 2 AND EVENT_ID = 1;

-- Check if seat number is already booked
SELECT * FROM TICKET
WHERE EVENT_ID = 3 AND SEAT_NO = 'A23' AND STATUS = 'Confirmed';

--EVENTS ORGANIZED BY SPECIFIC ORGANIZER
SELECT O.ORG_NAME, E.TITLE, E.EVENT_DATE
FROM ORGANIZER O
JOIN EVENT E ON O.ORG_ID = E.ORG_ID
WHERE O.ORG_NAME = 'ALPHA EVENTS';

--TICKETS SOLD PER EVENT
SELECT E.TITLE, COUNT(T.TICKET_ID) AS TOTAL_TICKETS_SOLD
FROM EVENT E
JOIN TICKET T ON E.EVENT_ID = T.EVENT_ID
WHERE T.STATUS = 'Confirmed'
GROUP BY E.TITLE;

--PERSONS REGISTERD PER EVENT
SELECT E.TITLE, COUNT(R.PERSON_ID) AS TOTAL_REGISTRATIONS
FROM EVENT E
JOIN REGISTRATION R ON E.EVENT_ID = R.EVENT_ID
GROUP BY E.TITLE;

--TICKETS SOLD FOR EVETN_ID = 3
SELECT COUNT(T.TICKET_ID) AS TOTAL_TICKETS_SOLD
FROM TICKET T
WHERE T.EVENT_ID = 3 AND T.STATUS = 'Confirmed';


